{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '36675717-03e407770521c85c00994a8a5';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query) {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n    return response.data.hits;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    return [];\n  }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function renderGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n    <a href=\"${largeImageURL}\" class=\"gallery-item\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" />\n      <div class=\"info\">\n        <p>Likes ${likes}</p>\n        <p>Views ${views}</p>\n        <p>Comments ${comments}</p>\n        <p>Downloads ${downloads}</p>\n      </div>\n    </a>`\n    )\n    .join('');\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n  const query = event.target.elements.searchQuery.value.trim();\n\n  if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please enter a search query!',\n    });\n    return;\n  }\n\n  gallery.innerHTML = '';\n  loader.style.display = 'block';\n\n  const images = await fetchImages(query);\n  loader.style.display = 'none';\n\n  if (images.length === 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Sorry, no images found. Try again!',\n    });\n    return;\n  }\n\n  renderGallery(images);\n});\n"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","error","renderGallery","images","gallery","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","form","loader","event","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAO,CACvC,GAAI,CAUF,OATiB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GACe,KAAK,IACtB,OAAQE,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACR,CACH,CClBO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAYD,EACjB,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,eACGL,CAAa;AAAA,kBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA,mBAEzBC,CAAK;AAAA,mBACLC,CAAK;AAAA,sBACFC,CAAQ;AAAA,uBACPC,CAAS;AAAA;AAAA,SAG3B,EACA,KAAK,EAAE,EACO,IAAIC,EAAe,YAAY,EACvC,QAAO,CAClB,CCxBA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CT,EAAU,SAAS,cAAc,UAAU,EAC3CU,EAAS,SAAS,cAAc,SAAS,EAE/CD,EAAK,iBAAiB,SAAU,MAAME,GAAS,CAC7CA,EAAM,eAAc,EACpB,MAAMhB,EAAQgB,EAAM,OAAO,SAAS,YAAY,MAAM,OAEtD,GAAI,CAAChB,EAAO,CACViB,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8BACf,CAAK,EACD,MACD,CAEDZ,EAAQ,UAAY,GACpBU,EAAO,MAAM,QAAU,QAEvB,MAAMX,EAAS,MAAML,EAAYC,CAAK,EAGtC,GAFAe,EAAO,MAAM,QAAU,OAEnBX,EAAO,SAAW,EAAG,CACvBa,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EACD,MACD,CAEDd,EAAcC,CAAM,CACtB,CAAC"}